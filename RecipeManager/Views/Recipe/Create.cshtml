@model RecipeManager.Models.Recipe

@{
    ViewBag.Title = "New Recipe";
}

@section Scripts
    {
    <script>
        jQuery(document).ready(function ($) {
            $('#add-step').on('click', function () {
                jQuery.get('/Recipe/AddStep').done(function (html) {
                    $('#steps-list').append(html);
                });
            });

            $('#steps-list').on("click", 'a.delete-step', function () {
                $(this).closest('div.step-editor').remove();
            });
        });
    </script>
}

<h2>New Recipe</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="form-group">
    <strong>@Html.LabelFor(model => model.Title)</strong>
    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
</div>
    <div class="form-group">
        <strong>@Html.LabelFor(model => model.Description)</strong>
        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>
    <strong>@Html.LabelFor(model => model.RecipeSteps)</strong>
    <div id="steps-list">
        @Html.EditorForMany(model => model.RecipeSteps, model => model.Index)
    </div>
    <div class="form-group">
        <strong>@Html.LabelFor(model => model.Notes)</strong>
        @Html.TextAreaFor(model => model.Notes, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
    </div>
    <button type="submit" class="btn btn-primary">Add Recipe</button>
    <input type="button" class="btn" id="add-step" value="Add Step" />
}

<div>
    <a asp-action="Index">Back to List</a>
</div>
